name: CI Build and Push

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Get the version number from commit count
        id: versioning
        run: echo "::set-output name=version::$(git rev-parse --short "$GITHUB_SHA")"
      
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: cr.eventool.online
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: cr.eventool.online/eventool-frontend:${{ steps.versioning.outputs.version }}
  
  update-swarm:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Replace image tag in stack file
        run: |
          export IMAGE_TAG=${{ needs.build-and-push.outputs.version }}
          envsubst < docker/eventool-frontend.yml > docker/eventool-frontend.generated.yml

      - name: Copy stack file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SWARM_MANAGER_HOST }}
          username: ${{ secrets.SWARM_MANAGER_USERNAME }}
          key: ${{ secrets.SWARM_MANAGER_SSH_KEY }}
          source: "docker/eventool-frontend.generated.yml"
          target: "/tmp" # or any directory where you have permission to write on the server

      - name: Update Docker Swarm Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SWARM_MANAGER_HOST }}
          username: ${{ secrets.SWARM_MANAGER_USERNAME }}
          key: ${{ secrets.SWARM_MANAGER_SSH_KEY }}
          script: |
            docker stack deploy --with-registry-auth --resolve-image=always -c /tmp/docker/eventool-frontend.generated.yml eventool-frontend
